USE MASTER

IF EXISTS(SELECT * FROM sys.databases WHERE NAME='ATENTO') 
	DROP DATABASE ATENTO
	
CREATE DATABASE ATENTO
GO

USE ATENTO

CREATE TABLE GENERO
(
	GENERO_CODIGO INT IDENTITY PRIMARY KEY, 
	GENERO_DESCRICAO VARCHAR(20) NOT NULL
)

CREATE TABLE ATOR
(
	ATOR_CODIGO INT IDENTITY PRIMARY KEY, 
	ATOR_NOME VARCHAR(50) NOT NULL
)

CREATE TABLE DIRETOR
(
	DIRETOR_CODIGO INT IDENTITY PRIMARY KEY,
	DIRETOR_NOME VARCHAR(50) NOT NULL
)

CREATE TABLE FILME
(
	FILME_CODIGO INT IDENTITY PRIMARY KEY, 
	FILME_NOME_ORIGINAL VARCHAR(50) NOT NULL,
	FILME_NOME_PT_BR VARCHAR(50) NULL,
	FILME_ANO SMALLINT CHECK(FILME_ANO <= YEAR(GETDATE()))
)

--SELECT GETDATE(),
--	DAY(GETDATE()), 
--	MONTH(GETDATE()), 
--	YEAR(GETDATE()) 

--SELECT GETDATE(), 
--	DATEPART(DD,GETDATE()), 
--	DATEPART(MM,GETDATE()), 
--	DATEPART(YY,GETDATE()), 
--	DATEPART(HH,GETDATE()), 
--	DATEPART(MI,GETDATE()), 
--	DATEPART(SS,GETDATE()), 
--	DATEPART(MS,GETDATE())

CREATE TABLE FILME_GENERO
(
	FILME_CODIGO INT REFERENCES FILME,
	GENERO_CODIGO INT REFERENCES GENERO,
	
	PRIMARY KEY(FILME_CODIGO, GENERO_CODIGO)
)

CREATE TABLE FILME_ATOR
(
	FILME_CODIGO INT REFERENCES FILME,
	ATOR_CODIGO INT REFERENCES ATOR,
	FILME_ATOR_PERSONAGEM VARCHAR(50) NULL,
	
	PRIMARY KEY(FILME_CODIGO, ATOR_CODIGO)
)

CREATE TABLE FILME_DIRETOR
(
	FILME_CODIGO INT REFERENCES FILME,
	DIRETOR_CODIGO INT REFERENCES DIRETOR,
	
	PRIMARY KEY(FILME_CODIGO, DIRETOR_CODIGO)
)

INSERT GENERO 
VALUES ('GUERRA'),
	('DRAMA'),
	('AVENTURA')
	
INSERT ATOR 
VALUES ('SYLVESTER STALONE'), 
	('CLINT EASTWOOD'), 
	('CHUCK NORRIS'), 
	('JET LI'), 
	('HILARY SWANK')

INSERT DIRETOR 
VALUES ('CLINT EASTWOOD'), 
	('SIMON WEST')

INSERT FILME 
VALUES('THE EXPENDABLES', 'OS MERCENÁRIOS', 2011), 
	('THE EXPENDABLES 2', 'OS MERCENÁRIOS 2', 2012), 
	('GRAN TORINO', 'GRAN TORINO', 2008), 
	('MILLION DOLLAR BABY', 'MENINA DE OURO', 2004)

INSERT FILME_GENERO
VALUES (1, 1), 
	(1, 3), 
	(2, 1), 
	(2, 3), 
	(3, 2), 
	(4, 2) 

INSERT FILME_DIRETOR
VALUES (1, 2), 
	(2, 2), 
	(3, 1), 
	(4, 1)

INSERT FILME_ATOR
VALUES (1, 1, 'BARNEY ROSS'), 
(1, 4, 'YIN YANG'), 
(2, 1, 'BARNEY ROSS'), 
(2, 3, 'BOOKER'), 
(2, 4, 'YIN YANG'), 
(3, 2, 'FRANKIE DUNN'), 
(3, 5, 'MAGGIE FITZGERALD')

SELECT *
FROM FILME
JOIN FILME_GENERO 
	ON FILME.FILME_CODIGO = FILME_GENERO.FILME_CODIGO
JOIN FILME_ATOR 
	ON FILME.FILME_CODIGO = FILME_ATOR.FILME_CODIGO
JOIN FILME_DIRETOR 
	ON FILME.FILME_CODIGO = FILME_DIRETOR.FILME_CODIGO
JOIN GENERO	
	ON GENERO.GENERO_CODIGO = FILME_GENERO.GENERO_CODIGO
JOIN ATOR	
	ON ATOR.ATOR_CODIGO = FILME_ATOR.ATOR_CODIGO
JOIN DIRETOR	
	ON DIRETOR.DIRETOR_CODIGO = FILME_DIRETOR.DIRETOR_CODIGO

---------------

SELECT *
FROM FILME

SELECT FILME_NOME_ORIGINAL, 
	FILME_ANO
FROM FILME

SELECT FILME_CODIGO, 
	FILME_NOME_ORIGINAL
FROM FILME

SELECT GETDATE() AS DATA_ATUAL, --COLUNA VIRTUAL
	* --TODAS AS COLUNAS DA TABELA
FROM ATOR

--ALTERAR ESTRUTURA DA TABELA, ACRESCENTANDO UMA COLUNA
ALTER TABLE ATOR
ADD ATOR_SEXO CHAR(1) 
	CHECK (ATOR_SEXO = 'M' OR ATOR_SEXO = 'F')
	
UPDATE ATOR
SET ATOR_SEXO = 'M'

UPDATE ATOR
SET ATOR_SEXO = 'F' 
WHERE ATOR_CODIGO = 5

SELECT *
FROM ATOR

SELECT ATOR_NOME, 
	ATOR_SEXO
FROM ATOR

--AVISA O CLIENTE QUE NÃO TEM JEITO!!! PERFORMANCE
SELECT ATOR_CODIGO, 
	ATOR_NOME, 
	CASE ATOR_SEXO 
		WHEN 'M' THEN 'MASCULINO'
		WHEN 'F' THEN 'FEMININO'
		ELSE 'SEXO NÃO INFORMADO'
	END
FROM ATOR

SELECT DIRETOR_CODIGO,
	DIRETOR_NOME
FROM DIRETOR
	
--ALIAS
SELECT DIRETOR_CODIGO AS 'CODIGO',
	DIRETOR_NOME AS 'NOME DO SUJEITO'
FROM DIRETOR
	
SELECT DIRETOR_CODIGO AS CODIGO,
	DIRETOR_NOME AS 'NOME DO SUJEITO'
FROM DIRETOR

SELECT DIRETOR_CODIGO CODIGO,
	DIRETOR_NOME 'NOME DO SUJEITO'
FROM DIRETOR

SELECT DIRETOR_CODIGO CODIGO,
	DIRETOR_NOME [NOME DO SUJEITO]
FROM DIRETOR

---------------

CREATE TABLE PEÇOA
(
	CÓDIGO_DA_PEÇOA INT IDENTITY,
	NOME VARCHAR(50)
)

EXEC sp_rename 'PEÇOA', 'PESSOA'
EXEC sp_rename 'PESSOA.CÓDIGO_DA_PEÇOA', 'CODIGO'

EXEC sp_tables

--ACESSANDO O CATÁLOGO DO DATABASE
SELECT * 
FROM sys.objects --SYSOBJECTS -> SQL 2000-
WHERE type = 'U' --USER TABLE

SELECT *
FROM sys.columns --SYSCOLUMNS -> SQL 2000-
WHERE OBJECT_NAME(object_id) = 'PESSOA'

EXEC sp_helpsort

EXEC sp_help

EXEC sp_help PESSOA

USE master

EXEC sp_help SP_RENAME

EXEC sp_helptext SP_RENAME

USE ATENTO

-----------------

EXEC sp_tables

DROP TABLE PESSOA

-----------------

CREATE TABLE PESSOA
(
	COD_PESSOA INT IDENTITY, 
	NOME_PESSOA VARCHAR(50), 
	SEXO_PESSOA CHAR(1), 
	NASC_PESSOA DATETIME
)

--DATA: yyyy-MM-dd HH:mm:ss.fff

--MM/dd/yyyy -> padrão do SQL
--dd/MM/yyyy -> como EU trabalho
 

INSERT INTO PESSOA
SELECT 'AGNALDO', 'M', '12/sep/1966'

INSERT INTO PESSOA
VALUES ('BRUNO', 'M', '1991-11-1'), 
	('NETINHO', 'M', '19970311'), 
	('PEDRO', 'M', '04/10/1998')

SELECT *
FROM PESSOA

--AVISA QUE NÃO TEM COMO FAZER!!! PERFORMANCE
SELECT COD_PESSOA, 
	NOME_PESSOA, 
	SEXO_PESSOA, 
	CONVERT(VARCHAR(20), NASC_PESSOA), 
	CONVERT(VARCHAR(20), NASC_PESSOA, 3), --DD/MM/AA
	CONVERT(VARCHAR(20), NASC_PESSOA, 103), --DD/MM/AAAA
	CONVERT(VARCHAR(20), NASC_PESSOA, 108), --HH:MM:SS
	CONVERT(VARCHAR(20), NASC_PESSOA, 121) -- AAAA-MM-DD HH:MM:SS.FFF
FROM PESSOA

--ALTERAR O TIPO DE DADO DA COLUNA
ALTER TABLE PESSOA
ALTER COLUMN NASC_PESSOA DATE

SELECT * 
FROM PESSOA
